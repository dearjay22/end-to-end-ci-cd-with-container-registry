name: assignment1-9062044-JayPatel-CI-CD

on:
  push:
    branches:
      - develop
      - release
  pull_request:
    branches:
      - develop
      - release

env:
  DOCKER_IMAGE: prog8860-calculator
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
  DOCKERHUB_TOKEN: ${{ secrets.DOCKERHUB_TOKEN }}

jobs:
  # ========== BUILD JOB ==========
  build:
    name: Build Application
    runs-on: ubuntu-latest
    environment: ${{ github.ref == 'refs/heads/release' && 'production' || 'dev' }}

    steps:
      - uses: actions/checkout@v4

      - name: Show Active Environment
        run: |
          echo "Environment selected based on branch: ${{ github.ref_name }}"
          echo "Active environment: ${{ github.ref == 'refs/heads/release' && 'production' || 'dev' }}"
          echo "Branch reference: $GITHUB_REF"

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        working-directory: ./Assignment1
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Verify build success
        run: echo "Build completed successfully for branch ${{ github.ref_name }}"

  # ========== TEST JOB ==========
  test:
    name: Run Unit Tests
    runs-on: ubuntu-latest
    needs: build
    environment: ${{ github.ref == 'refs/heads/release' && 'production' || 'dev' }}

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Run tests
        working-directory: ./Assignment1
        run: |
          echo "Running tests for environment ${{ github.ref == 'refs/heads/release' && 'production' || 'dev' }}"
          python -m unittest discover -s Unit_Test -p "test_*.py"

  # ========== DOCKER JOB ==========
  dockerize:
    name: Build, Scan, and Push Docker Image
    runs-on: ubuntu-latest
    needs: test
    environment: ${{ github.ref == 'refs/heads/release' && 'production' || 'dev' }}

    steps:
      - uses: actions/checkout@v4

      - name: Build Docker image
        run: |
          TAG=${{ github.run_number }}
          echo "Building Docker image for $DOCKERHUB_USERNAME/$DOCKER_IMAGE:$TAG"
          docker build -t $DOCKERHUB_USERNAME/$DOCKER_IMAGE:$TAG ./Assignment1
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Run Security Scan (Trivy)
        uses: aquasecurity/trivy-action@0.28.0
        with:
          image-ref: ${{ env.DOCKERHUB_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ github.run_number }}
          format: table
          severity: 'HIGH,CRITICAL'
          exit-code: '0'
          ignore-unfixed: true

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push Docker image
        run: |
          echo "Pushing image to DockerHub..."
          docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:${{ github.run_number }}
          if [[ "${GITHUB_REF#refs/heads/}" == "release" ]]; then
            docker tag $DOCKERHUB_USERNAME/$DOCKER_IMAGE:${{ github.run_number }} $DOCKERHUB_USERNAME/$DOCKER_IMAGE:latest
            docker push $DOCKERHUB_USERNAME/$DOCKER_IMAGE:latest
            echo "Tagged and pushed as latest (production release)"
          fi

  # ========== ENVIRONMENT SUMMARY ==========
  summary:
    name: CI/CD Environment Summary
    runs-on: ubuntu-latest
    needs: dockerize
    environment: ${{ github.ref == 'refs/heads/release' && 'production' || 'dev' }}

    steps:
      - name: Print Summary
        run: |
          echo "===================================="
          echo "CI/CD Completed Successfully"
          echo "Branch: $GITHUB_REF_NAME"
          echo "Environment: ${{ github.ref == 'refs/heads/release' && 'production' || 'dev' }}"
          echo "Docker Image: $DOCKERHUB_USERNAME/$DOCKER_IMAGE:${{ github.run_number }}"
          echo "===================================="
