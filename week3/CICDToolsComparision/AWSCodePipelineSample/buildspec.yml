version: 0.2

env:
  variables:
    NODE_ENV: production
    AWS_REGION: us-east-1
    IMAGE_REPO_NAME: my-app
    IMAGE_TAG: latest

  parameter-store:
    DB_HOST: "/myapp/db/host"
    DB_PORT: "/myapp/db/port"

  secrets-manager:
    DB_PASSWORD: "myapp/db#password"

phases:
  install:
    runtime-versions:
      nodejs: 16
    commands:
      - echo "Installing NPM dependencies…"
      - npm ci

  pre_build:
    commands:
      - echo "Logging in to Amazon ECR…"
      - |
        aws ecr get-login-password \
          --region $AWS_REGION \
        | docker login \
          --username AWS \
          --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

  build:
    commands:
      - echo "Building Docker image…"
      - docker build \
          -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag \
          $IMAGE_REPO_NAME:$IMAGE_TAG \
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG

  post_build:
    commands:
      - echo "Pushing image to ECR…"
      - docker push \
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "Generating imagedefinitions.json for CodeDeploy…"
      - printf '[{"name":"container","imageUri":"%s"}]' \
          $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG \
        > imagedefinitions.json

reports:
  coverage-report:
    files:
      - coverage/**/*.xml
    base-directory: reports
    file-format: JACOCO

artifacts:
  files:
    - imagedefinitions.json
  discard-paths: yes

cache:
  paths:
    - node_modules/**/*
    - '/root/.cache/pip/**/*'

logs:
  cloudwatch:
    status: true
    group-name: "/aws/codebuild/my-project"
    stream-name: "build-log-stream"

timeout-in-minutes: 60
